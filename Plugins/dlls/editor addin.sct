<scriptlet>

<implements type="Automation" id="dispatcher">
	<property name="PluginEvent">
		<get/>
	</property>
	<property name="PluginDescription">
		<get/>
	</property>
	<property name="PluginExtendedProperties">
		<get/>
	</property>
	<property name="PluginArguments">
		<get/>
		<put/>
	</property>
	<method name="MakeUpper"/>
	<method name="MakeLower"/>
	<method name="RemoveDuplicates"/>
	<method name="CountDuplicates"/>
	<method name="SortAscending"/>
	<method name="SortDescending"/>
	<method name="ExecFilterCommand"/>
</implements>

<script language="VBS">
Option Explicit

Const WinMergeRegKeyPath = "HKCU\Software\Thingamahoochie\WinMerge\"
Const PluginRegKeyPath = "HKCU\Software\Thingamahoochie\WinMerge\Plugins\editor addin.sct\"

Dim wsh: Set wsh = CreateObject("WScript.Shell")
Dim arguments: arguments = ""

Function get_PluginEvent()
	get_PluginEvent = "EDITOR_SCRIPT"
End Function

Function get_PluginDescription()
	get_PluginDescription = "Basic text functions for the context menu"
End Function

Function get_PluginExtendedProperties()
	get_PluginExtendedProperties = "GenerateUnpacker;MakeUpper.MenuCaption=Make Uppercase;MakeLower.MenuCaption=Make Lowercase;RemoveDuplicates.MenuCaption=Remove Duplicate Lines;CountDuplicates.MenuCaption=Count Duplicate Lines;SortAscending.MenuCaption=Sort Lines Ascending;SortDescending.MenuCaption=Sort Lines Descending;ExecFilterCommand.MenuCaption=Apply Filter Command..."
End Function

Function get_PluginArguments()
	get_PluginArguments = arguments
End Function

Sub put_PluginArguments(NewValue)
	arguments = NewValue
End Sub

Function regRead(Key, DefaultValue)
	regRead = DefaultValue
	On Error Resume Next
	regRead = wsh.RegRead(Key)
End Function

Function IsLangJapanese()
	Dim languageId
	On Error Resume Next
	languageId = CLng(regRead(WinMergeRegKeyPath & "Locale\LanguageId", 1033))
	IsLangJapanese = (languageId = 1041)
End Function

' transformation functions
Function MakeUpper(Text)
	MakeUpper = UCase(Text)
End Function

Function MakeLower(Text)
	MakeLower = LCase(Text)
End Function

Function ExecFilterCommand(Text)
	Dim cmd
	If arguments = "" Then
		cmd = regRead(PluginRegKeyPath & "ExecFilterCommand", "")
		If IsLangJapanese() Then
			cmd = InputBox("フィルタコマンドを入力してください", "ExecFilterCommand", cmd)
		Else
			cmd = InputBox("Enter filter command", "ExecFilterCommand", cmd)
		End If
	Else
		cmd = arguments
	End If
	If cmd = "" Then
		If IsLangJapanese() Then
			Err.Raise 30001, , "キャンセルされました"
		Else
			Err.Raise 30001, , "Canceled"
		End If
		Exit Function
	End If

	On Error Resume Next

	Dim path
	path = wsh.ExpandEnvironmentStrings("%TEMP%\_winmerge_addin_temp_.txt")

	Dim fso
	Dim ts
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set ts = fso.CreateTextFile(path)
	If ts Is Nothing Then
		Exit Function
	End If
	ts.Write Text
	ts.Close

	Dim exe
	Set exe = wsh.Exec("cmd /c type """ & path & """  | " & cmd & " 2>&1")
	If exe Is Nothing Then
		If IsLangJapanese() Then
			MsgBox "コマンド " & cmd & " の実行に失敗しました:" & Err.Description 
		Else
			MsgBox "Failed to execute the command '" & cmd & "':" & Err.Description 
		End If
		fso.DeleteFile path
		Exit Function
	End If

	ExecFilterCommand = ""
	Do Until exe.StdOut.AtEndOfStream
		ExecFilterCommand = ExecFilterCommand & exe.StdOut.ReadLine & vbCrLf
	Loop

	fso.DeleteFile path

	wsh.RegWrite PluginRegKeyPath & "ExecFilterCommand", cmd

End Function


</script>

<script language="JScript">

function RemoveDuplicates(Text) {
	var eol = Text.match(/\r\n|\n|\r/);
	var lines = Text.split(eol);
	var newlines = new Array();
	var dic = {};
	var lasteol = false;

	if (!lines[lines.length - 1]) {
		lines.pop();
		lasteol = true;
	}
	for (var i = 0, j = 0; i < lines.length; i++) {
		var line = lines[i];
		if (typeof dic[line] === 'undefined') {
			dic[line] = 1;
			newlines[j] = line;
			j++;
		}
	}
	if (lasteol)
		newlines[j] = "";
	return newlines.join(eol);
}

function CountDuplicates(Text) {
	var eol = Text.match(/\r\n|\n|\r/);
	var lines = Text.split(eol);
	var newlines = new Array();
	var dic = {};

	if (!lines[lines.length - 1]) {
		lines.pop();
	}
	
	for (var i = 0; i < lines.length; i++) {
		var line = lines[i];
		if (typeof dic[line] === 'undefined') {
			dic[line] = 1;
			newlines[j] = line;
			j++;
		} else {
			dic[line]++;
		}
	}
	var j = 0;
	for (var line in dic) {
		newlines[j] = line + '\t' + dic[line];
		j++;
	}
	newlines[j] = "";
	return newlines.join(eol);
}

function SortAscending(Text) {
	var eol = Text.match(/\r\n|\n|\r/);
	var lines = Text.split(eol);

	if (lines.length == 1) {
		return Text;
	} else if (lines[lines.length - 1] == "") {
		lines.pop();
		return lines.sort().join(eol) + eol;
	} else {
		return lines.sort().join(eol);
	}
}

function SortDescending(Text) {
	var eol = Text.match(/\r\n|\n|\r/);
	var lines = Text.split(eol);

	if (lines.length == 1) {
		return Text;
	} else if (lines[lines.length - 1] == "") {
		lines.pop();
		lines.sort(function(a, b) { return a < b ? 1 : -1; });
		return lines.join(eol) + eol;
	} else {
		return lines.sort(function(a, b) { return a < b ? 1 : -1; }).join(eol);
	}
}

</script>

</scriptlet>
